Chris Nappin's play-recaptcha project todo list
===============================================

done for version 2.4
--------------------
- added support for Play 2.7.3+ and Scala 2.13 (starting from PR from @gmixa)
- added CSRF to example forms

Google reCAPTCHA
----------------
My personal key is registered to nappin.com (but works with localhost)
Google development documentation is at https://developers.google.com/recaptcha/docs/display


github account
--------------
www.github.com, chrisnappin/..

markdown details: https://help.github.com/articles/markdown-basics
wiki details: https://help.github.com/articles/about-github-wikis

module repo: https://github.com/chrisnappin/play-recaptcha
module website (uses gh-pages branch): http://chrisnappin.github.io/play-recaptcha
module wiki: https://github.com/chrisnappin/play-recaptcha/wiki

example repo: https://github.com/chrisnappin/play-recaptcha-example


sonatype account
----------------
https://issues.sonatype.org, chrisnappin/..
groupId = com.nappin


to publish locally
------------------
run "sbt" (to enter the shell) then run:
 + publishLocal
or
 + publishLocalSigned
  
- writes to ~/.ivy2/local/com.nappin/play-recaptcha_2.x/a.b (for each scala version)
 

to publish on Maven Central
---------------------------
sbt uses the standard Maven2 repository (http://repo1.maven.org/maven/ aka http://central.sonatype.org) by default
see http://mfizz.com/blog/2013/07/play-framework-module-maven-central
and http://central.sonatype.org/pages/ossrh-guide.html
and http://www.scala-sbt.org/release/docs/Using-Sonatype.html

Using the SBT PGP plugin, rather than using GPG itself
- added to project/plugins.sbt:
  addSbtPlugin("com.typesafe.sbt" % "sbt-pgp" % "0.8.3")
  
- create PGP keys (in activator/play shell)
  set pgpReadOnly := false
  pgp-cmd gen-key
  
Name: Chris Nappin
email: chris@nappin.com
passphrase: ..
  
Public key is pubring.asc
Secret key is secring.asc

- then publish the public key:
  pgp-cmd send-key chris@nappin.com hkp://pool.sks-keyservers.net/
(command line said success, but sonatype or key search couldn't find it)
(manually uploaded contents from pubring.asc to https://a.keyserver.pki.scientia.net)

- add extra pom details needed for Sonatype (see build.sbt)

- created $home\.sbt\0.13\sonatype.sbt:
    credentials += Credentials("Sonatype Nexus Repository Manager",
                           "oss.sonatype.org",
                           "chrisnappin",
                           "..")

- run:
  activator + publish-signed 


workflow
--------
make test/beta releases to maven central using a "a.b-SNAPHOTS" version number
- this uploads artifacts to the "snapshots" repo (Maven Central only includes "full" releases)
- snapshots can be published several times (immediately overwrites)
- run "activator update" to explicitly refresh remote snapshot dependencies (otherwise it will try to cache locally)

make "full releases" using a regular version number (e.g. "a.b")
- this uploads artifacts to the "staging" repo
- releases cannot be published several times, have to be deleted first

?? then need to "drop"/"close" (delete release, try again later) or "release" (promote to maven central) the staging repository
- login to https://oss.sonatype.org (using sonatype user account above)
- click on Build Promotion -> Staging Repositories
    - look for groupId without dots and with -nnnn suffix
        - status should be "Open"
        - can manually download and test it
        - can select the repo and click "Close" to trigger evaluation
            (takes a couple of minutes)
            - if fails, need to "Drop", resolve issues (see "Ruleset Evaluation Report") then redeploy to staging
            - if successful, click "Release" to move staging repo to release repo
            (first time you do this, need to update ticket to activate sync)

(sbt-sonatype plugin can be used to automate all of this - see https://github.com/xerial/sbt-sonatype)

- Maven central syncs to release repo, takes about 2 hours
    - cannot update or delete artifacts from this point!

Then use Github Releases with changelog etc
Then update wiki with links to latest release
